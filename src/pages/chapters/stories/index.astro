---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

interface StoryData {
  title: string;
  description: string;
  pubDate: Date;
  category: string;
  tags?: string[];
}

const stories = await getCollection('stories') as CollectionEntry<'stories'>[];
const title = "Stories â€“ The Book of Robat Das Orvi";
const description = "A collection of short stories and dreams from Robat Das Orvi's journey.";
const currentPath = "/chapters/stories";
---

<BaseLayout title={title} description={description} currentPath={currentPath}>
  <main class="stories-grid">
    <h1>Stories</h1>
    <div class="stories-list">
      {stories.map((story: CollectionEntry<'stories'>) => (
        <article class="story-card">
          <a href={`/chapters/stories/${story.slug}`} data-page-turn>
            <h2>{story.data.title}</h2>
            <p class="story-excerpt">{story.data.description}</p>
            <div class="story-meta">
              <time datetime={story.data.pubDate.toISOString()}>
                {new Date(story.data.pubDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              <span class="story-category">{story.data.category}</span>
              {story.data.tags && (
                <div class="story-tags">
                  {story.data.tags.map((tag: string) => (
                    <span class="tag">{tag}</span>
                  ))}
                </div>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>
  </main>
</BaseLayout>

<style>
  .stories-grid {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: var(--spacing-xl) 0;
  }

  h1 {
    text-align: center;
    margin-bottom: var(--spacing-xl);
    color: var(--accent-color);
    font-family: 'Playfair Display', serif;
  }

  .stories-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--spacing-lg);
    padding: 0 var(--spacing-md);
  }

  .story-card {
    background: var(--card-bg);
    border-radius: 8px;
    box-shadow: var(--page-shadow);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .story-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }

  .story-card a {
    display: block;
    padding: var(--spacing-lg);
    color: inherit;
    text-decoration: none;
  }

  .story-card h2 {
    font-size: 1.5rem;
    margin-bottom: var(--spacing-sm);
    color: var(--accent-color);
    font-family: 'Playfair Display', serif;
  }

  .story-excerpt {
    color: var(--text-color);
    opacity: 0.8;
    margin-bottom: var(--spacing-md);
    font-size: 0.95rem;
    line-height: 1.6;
  }

  .story-meta {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    font-size: 0.9rem;
    color: var(--text-color);
    opacity: 0.7;
  }

  .story-category {
    display: inline-block;
    padding: 0.2rem 0.5rem;
    background: var(--tag-bg);
    color: var(--tag-color);
    border-radius: 4px;
    font-size: 0.8rem;
    margin-top: var(--spacing-xs);
  }

  .story-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-top: var(--spacing-xs);
  }

  .tag {
    background: var(--tag-bg);
    color: var(--tag-color);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
  }

  @media (max-width: 768px) {
    .stories-list {
      grid-template-columns: 1fr;
    }

    .story-card {
      margin: 0 var(--spacing-sm);
    }
  }
</style> 